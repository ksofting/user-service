spring:
  profiles:
    active: local
  application:
    #进行服务注册时该服务的名称,名称尽量用小写
    name: user-service
  cloud:
    inetutils:
      #设置服务所使用的ip网段，针对多网卡情况
      preferredNetworks: 192.168
      #开启服务调用重发机制
    loadbalancer:
      retry:
        enabled: true
server:
  #指定该实例的端口
  port: 2012
eureka:
  client:
    serviceUrl:
#      defaultZone: http://peer1:1111/eureka/,http://peer2:1112/eureka/ #指定eureka服务器的注册地址
      defaultZone: http://localhost:8761/eureka/
    healthcheck:
      #开启健康检查（需要spring-boot-starter-actuator依赖）
      enabled: true
  instance:
    #将IP注册到Eureka Server上，而如果不配置就是机器的主机名
    preferIpAddress: true
    #设置instance为ip+端口，不使用机器名
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
    #租期更新时间间隔（默认30秒）
    lease-renewal-interval-in-seconds: 10
    #租期到期时间（默认90秒）
    lease-expiration-duration-in-seconds: 30
logging:
  level:
    root: info
    com:
      zeus: debug
#断路器的超时时间需要大于Ribbon的超时时间， 不然不会触发重试
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000
#下面的ribbon参数设置支持对特定服务的特定设置，设置方式为：<client>.ribbon.<key>=<value>
#请求连接的超时时间
ribbon:
  ConnectTimeout: 250
  #请求处理的超时时间
  ReadTimeout: 2000
  #对所有操作请求都进行重试
  OkToRetryOnAllOperations: true
  #切换实例的重试次数
  MaxAutoRetriesNextServer: 2
  #对当前实例的重试次数
  MaxAutoRetries: 1

---
spring:
  #本地
  profiles: local
  cloud:
    config:
      uri: http://127.0.0.1:7001/
      profile: dev
      label: master
logging:
  file: d:/logs/${spring.application.name}.log

---
spring:
  #发布
  profiles: deploy
  cloud:
    config:
     #服务治理的配置管理需要在swarm集群中才能使用,开发直接配置url
      discovery:
        enabled: true
        serviceId: config-server
logging:
  file: /tmp/${spring.application.name}.log